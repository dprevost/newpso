#! /usr/bin/env python
# encoding: utf-8
# :mode=python:  - For jedit

# Copyright (C) 2009-2010 Daniel Prevost <dprevost@photonsoftware.org>
#  
# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without 
# modifications, as long as this notice is preserved.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

test_list = [
   'Acquire',
   'Fini',
   'Init',
   'Release',
   'TryAcq']

#thread_test_code     = ['LockConcurrency.c',    'Barrier.c', 'ThreadWrap.c']
#thread_test_code_try = ['LockConcurrencyTry.c', 'Barrier.c', 'ThreadWrap.c']
thread_list = ['Barrier.c', 'ThreadWrap.c']

def build(bld):

   obj_thread_lock = {}
   for prog in test_list:
      prog_c = prog + '.c'
      obj_thread_lock[prog_c] = bld.new_task_gen(
         features     = 'cc cprogram',
         source       = prog_c,
         target       = prog,
         includes     = '../../..',
         install_path = None,
         lib          = bld.env['CMOCKERY'],
         uselib_local = 'Common') 
      if bld.env['CMOCKERY']:
         obj_thread_lock[prog_c].unit_test = 1

   obj_thread_lock['LockTests'] = bld.new_task_gen(
      features     = 'cc cprogram',
      source       = 'LockTests.c',
      target       = 'LockTests',
      includes     = '../../..',
      install_path = None,
      lib          = bld.env['CMOCKERY'],
      uselib_local = 'Common') 
   if bld.env['CMOCKERY'] and bld.env['MORE_TESTS']:
      obj_thread_lock['LockTests'].unit_test = 1

   thread_lib = bld.new_task_gen(
      features = 'cc cstaticlib',
      source   = thread_list,
      includes = '../../..',
      defines  = ['BUILD_PHOTON_COMMON'],
      target   = 'local_thread_wrap')
   thread_lib.install_path = None

   obj_thread_lock['LockConcurrency'] = bld.new_task_gen(
      features     = 'cc cprogram',
      source       = 'LockConcurrency.c',
      target       = 'LockConcurrency',
      includes     = '../../..',
      install_path = None,
      lib          = bld.env['CMOCKERY'],
      uselib_local = ['Common', 'local_thread_wrap'] ) 
   if bld.env['CMOCKERY'] and bld.env['MORE_TESTS']:
      obj_thread_lock['LockConcurrency'].unit_test = 1

   obj_thread_lock['LockConcurrencyTry'] = bld.new_task_gen(
      features     = 'cc cprogram',
      source       = 'LockConcurrencyTry.c',
      target       = 'LockConcurrencyTry',
      includes     = '../../..',
      install_path = None,
      lib          = bld.env['CMOCKERY'],
      uselib_local = ['Common', 'local_thread_wrap'] ) 
   if bld.env['CMOCKERY'] and bld.env['MORE_TESTS']:
      obj_thread_lock['LockConcurrencyTry'].unit_test = 1

