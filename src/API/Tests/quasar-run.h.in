/* -*- c -*- */
/* :mode=c:  - For jedit, previous line for emacs */
/*
 * Copyright (C) 2008-2009 Daniel Prevost <dprevost@photonsoftware.org>
 *
 * This file is part of Photon (photonsoftware.org).
 *
 * This file may be distributed and/or modified under the terms of the
 * GNU General Public License version 2 or version 3 as published by the 
 * Free Software Foundation and appearing in the file COPYING.GPL2 and 
 * COPYING.GPL3 included in the packaging of this software.
 *
 * Licensees holding a valid Photon Commercial license can use this file 
 * in accordance with the terms of their license.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 */

/* --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+-- */

#ifndef PSOT_QUASAR_RUN_H
#define PSOT_QUASAR_RUN_H

/* --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+-- */

//#include "API/CommonObject.h"
//#include "Nucleus/FastMap.h"
//#include "API/HashMap.h"
//#include "API/DataDefinition.h"

#define QUASAR_DIR  @QUASAR_DIR@
#if defined WIN32
const char * quasarName = @QUASAR_DIR@ "\\quasar.exe";
#else
const char * quasarName = @QUASAR_DIR@ "/quasar";
#endif

/* --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+-- */

BEGIN_C_DECLS

/* --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+-- */

bool startQuasar()
{
   pid_t pid, childPid;
   int  i, childStatus;
   bool foundError = false;

   /* Launch the child */
#if defined(_WIN32)
   pid = _spawnl( _P_NOWAIT, quasarName, quasarName, NULL ); 
   assert_true( pid > 0 );
   childPid = pid;
#else
   pid = fork();
   if ( pid == 0 ) {
      execl( quasarName, quasarName, NULL );
      /* If we come here, something is wrong ! */
      return false;
   }
   else if ( pid > 0 ) {
      childPid = pid;
      fprintf( stderr, "Launched child, pid = %d\n", pid );
   }
   else {
      fprintf( stderr, "Fork failure, errno = %d\n", errno );
      return false;
   }
#endif

   return true;
}

/* --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+-- */

int stopQuasar()
{
#if 0
      /* Now wait for the child processes to end */
   for ( i = 0; i < numChilds; ++i ) {
#if defined(_WIN32)
      _cwait( &childStatus, childPid[i], _WAIT_CHILD );
      if ( childStatus != 0 ) foundError = true;
#else
      waitpid( childPid[i], &childStatus, 0 );
      if ( WEXITSTATUS(childStatus) != 0 ) foundError = true;
#endif
   }
   assert_false( foundError );

   free( processName );
   free( childPid );
#endif
}

/* --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+-- */

END_C_DECLS

/* --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+-- */

#endif /* PSOT_QUASAR_RUN_H */

/* --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+-- */
